name: Update README with user count and graph
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'
jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm install
      
      - name: Run script and get count, update user-stats.json
        id: get_count
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
        run: |
          set -e
          
          COUNT=$(node userCount.js | grep -Eo '^[0-9]+$')
          echo "‚úî Count from DB: $COUNT"
          
          if ! [[ "$COUNT" =~ ^[0-9]+$ ]]; then
            echo "‚ùå Error: COUNT is not a valid number: $COUNT"
            exit 1
          fi
          
          STATS_FILE=user-stats.json
          TODAY=$(date +'%Y-%m-%d')
          
          if [ ! -f "$STATS_FILE" ]; then
            echo "[]" > "$STATS_FILE"
            echo "‚úî Created empty $STATS_FILE"
          fi
          
          UPDATED_JSON=$(jq --arg date "$TODAY" --argjson count "$COUNT" '
            (map(select(.date == $date)) | length) as $exists
            | if $exists > 0 then
                map(if .date == $date then .count = $count else . end)
              else
                . + [{date: $date, count: $count}]
              end
          ' "$STATS_FILE")
          
          echo "$UPDATED_JSON" > "$STATS_FILE"
          echo "‚úî Updated $STATS_FILE with today's count"
          echo "count=$COUNT" >> "$GITHUB_OUTPUT"
      
      - name: Log value
        run: |
          echo "‚úî User count is: ${{ steps.get_count.outputs.count }}"
      
      - name: Generate chart config
        run: |
          set -e
          jq -c '{type:"line",data:{labels:map(.date),datasets:[{label:"Users",data:map(.count),fill:false,borderColor:"rgb(54, 162, 235)",backgroundColor:"rgba(54, 162, 235, 0.2)",tension:0.1}]},options:{responsive:true,plugins:{title:{display:true,text:"User Growth Over Time"}},scales:{x:{title:{display:true,text:"Date"}},y:{title:{display:true,text:"User Count"},beginAtZero:true}}}}' user-stats.json > chart-config.json
      
      - name: Encode chart config
        id: gen_chart_config
        run: |
          set -e
          
          CONFIG=$(cat chart-config.json | jq -sRr @uri)
          echo "config=$CONFIG" >> "$GITHUB_OUTPUT"
      
      - name: Generate README.md from template
        run: |
          set -e

          COUNT="${{ steps.get_count.outputs.count }}"
          CONFIG="${{ steps.gen_chart_config.outputs.config }}"

          TEMPLATE_FILE="README.template.md"
          OUTPUT_FILE="README.md"

          if [ ! -f "$TEMPLATE_FILE" ]; then
            echo "‚ùå $TEMPLATE_FILE not found"
            exit 1
          fi

          cp "$TEMPLATE_FILE" "$OUTPUT_FILE"

          sed -i "s|<USER_COUNT_PLACEHOLDER>|$COUNT|g" "$OUTPUT_FILE"
          sed -i "s|<CHART_CONFIG_PLACEHOLDER>|$CONFIG|g" "$OUTPUT_FILE"

          echo "‚úî README.md generated from template"
      
      - name: Check for changes
        id: check_changes
        run: |
          if git diff --quiet; then
            echo "No changes detected"
            echo "has_changes=false" >> "$GITHUB_OUTPUT"
          else
            echo "Changes detected"
            echo "has_changes=true" >> "$GITHUB_OUTPUT"
          fi
      
      - name: Commit and push changes
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          set -e
          
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          git add README.md user-stats.json chart-config.json
          git commit -m "Update user count to ${{ steps.get_count.outputs.count }} and refresh chart data"
          
          git push
          
          echo "‚úî Successfully committed and pushed changes"
      
      - name: Summary
        run: |
          echo "üìä Workflow Summary:"
          echo "- User Count: ${{ steps.get_count.outputs.count }}"
          echo "- Changes Made: ${{ steps.check_changes.outputs.has_changes }}"
          echo "- Date: $(date +'%Y-%m-%d %H:%M:%S UTC')"
